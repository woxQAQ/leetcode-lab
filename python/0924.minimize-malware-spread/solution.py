# Created by woxQAQ at 2025/09/07 16:28
# leetgo: 1.4.15
# https://leetcode.cn/problems/minimize-malware-spread/

from typing import *
from leetgo_py import *

# @lc code=begin


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        s = set(initial)
        vis = [False] * len(graph)

        def dfs(node):
            vis[node] = True
            nonlocal node_id, size
            size += 1
            if node_id != -2 and node in s:
                node_id = node if node_id == -1 else -2
            for y, edge in enumerate(graph[node]):
                if edge and not vis[y]:
                    dfs(y)

        ans = -1
        max_size = 0
        for i in initial:
            if vis[i]:
                continue
            node_id = -1
            size = 0
            dfs(i)
            if node_id >= 0 and (size > max_size or size == max_size and node_id < ans):
                ans = node_id
                max_size = size

        return min(initial) if ans < 0 else ans


# @lc code=end

if __name__ == "__main__":
    graph: List[List[int]] = deserialize("List[List[int]]", read_line())
    initial: List[int] = deserialize("List[int]", read_line())
    ans = Solution().minMalwareSpread(graph, initial)
    print("\noutput:", serialize(ans, "integer"))
